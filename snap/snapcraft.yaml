name: rabbitmq-server-snap
base: core22
version: '3.9.24'
summary: AMQP server written in Erlang
description: |
  RabbitMQ is an implementation of AMQP, the emerging standard for
  high performance enterprise messaging. The RabbitMQ server is a
  robust and scalable implementation of an AMQP broker.
source-code: https://github.com/nicolasbock/rabbitmq-server-snap
website: https://github.com/nicolasbock/rabbitmq-server-snap
issues: https://github.com/nicolasbock/rabbitmq-server-snap/issues
contact: https://github.com/nicolasbock/rabbitmq-server-snap/issues
icon: assets/logo.png
license: Apache-2.0
architectures:
  - amd64
  - arm64
  - armhf
  - ppc64el
  - s390x
grade: stable
confinement: strict

plugs:
  log-observe:
  mount-observe:
  network-bind:

apps:
  rabbitmq-server:
    daemon: simple
    restart-condition: on-failure
    restart-delay: 10s
    command: usr/lib/erlang/bin/rabbitmq-server
    stop-command: usr/lib/erlang/bin/rabbitmqctl stop
  rabbitmqctl:
    command: usr/lib/erlang/bin/rabbitmqctl

parts:
  rabbitmq-support:
    plugin: dump
    source: assets
    organize:
      rabbitmq-defaults: etc/rabbitmq/rabbitmq-defaults
      rabbitmq-server.service: lib/systemd/system/rabbitmq-server.service
    stage:
      - etc/rabbitmq/rabbitmq-defaults
      - lib/systemd/system/rabbitmq-server.service

  # Building rabbitmq-server from git fails because the build script downloads other
  # repositories in `deps` and uses the `master` branch of them. This leads to build
  # failures because the Erlang version is not recent enough.
  #
  # RabbitMQ dependencies: https://www.rabbitmq.com/which-erlang.html
  rabbitmq-server:
    after:
      - elixir
      - erlang
    plugin: make
    source: https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.9.24/rabbitmq-server-3.9.24.tar.xz
    build-packages:
      - curl
      - python3-simplejson
      - rsync
      - unzip
      - xmlto
      - xsltproc
      - zip
    stage-packages:
      - adduser
      - coreutils
      - libtinfo5
      - logrotate
      - lsb-base
      - socat
    override-build: |
      set -e -u -x

      echo "Starting to build rabbitmq-server at $(date)"
      START_TIME=$(date +%s)

      export DESTDIR="${SNAPCRAFT_PART_INSTALL}"
      export PREFIX=/usr
      export PYTHON=python3
      export V=1

      sed --in-place \
        --expression 's:^SYS_PREFIX=.*:SYS_PREFIX=${SNAP_COMMON}:' \
        deps/rabbit/scripts/rabbitmq-defaults

      make -j ${SNAPCRAFT_PARALLEL_BUILD_COUNT} dist manpages
      
      make install
      make install-bin

      echo "Finished building rabbitmq-server at $(date)"
      END_TIME=$(date +%s)
      echo "Total time: $((${END_TIME} - ${START_TIME})) seconds"

  elixir:
    after:
      - erlang
    plugin: make
    source: https://github.com/elixir-lang/elixir.git
    source-tag: v1.13.4
    source-depth: 1
    make-parameters:
      - test
      - PREFIX=/usr
    override-build: |
      echo "Starting to build elixir at $(date)"
      START_TIME=$(date +%s)

      snapcraftctl build

      echo "Finished building elixir at $(date)"
      END_TIME=$(date +%s)
      echo "Total time: $((${END_TIME} - ${START_TIME})) seconds"
    stage:
      - usr

  erlang:
    plugin: autotools
    source: https://github.com/erlang/otp.git
    source-tag: OTP-24.3.4.3
    source-depth: 1
    build-packages:
      - fop
      - libssl-dev
      - libncurses5-dev
      - libwxbase3.0-dev
      - libxml2-utils
      - xsltproc
    stage-packages:
      - openssl
      - ncurses-base
      - libncurses5
      - libtinfo5
    autotools-configure-parameters:
      - --prefix=/usr
    override-build: |
      echo "Starting to build erlang at $(date)"
      START_TIME=$(date +%s)

      ./otp_build autoconf
      snapcraftctl build

      sed --in-place \
        --expression 's:^\(\s*ROOTDIR\)="/usr/.*":\1=$(readlink --canonicalize $(dirname $0)/../lib/erlang):' \
        ${SNAPCRAFT_PART_INSTALL}/usr/bin/erl
      sed --in-place \
        --expression 's:^\(\s*ROOTDIR\)="/usr/.*":\1=$(readlink --canonicalize $(dirname $0)/../..):' \
        ${SNAPCRAFT_PART_INSTALL}/usr/lib/erlang/erts-*/bin/start
      sed --in-place \
        --expression 's:^\(\s*ROOTDIR\)="/usr/.*":\1=$(readlink --canonicalize $(dirname $0)/../..):' \
        ${SNAPCRAFT_PART_INSTALL}/usr/lib/erlang/erts-*/bin/erl
      sed --in-place \
        --expression 's:^\(\s*ROOTDIR\)="/usr/.*":\1=$(readlink --canonicalize $(dirname $0)/..):' \
        ${SNAPCRAFT_PART_INSTALL}/usr/lib/erlang/bin/start
      sed --in-place \
        --expression 's:^\(\s*ROOTDIR\)="/usr/.*":\1=$(readlink --canonicalize $(dirname $0)/..):' \
        ${SNAPCRAFT_PART_INSTALL}/usr/lib/erlang/bin/erl

      echo "Finished building erlang at $(date)"
      END_TIME=$(date +%s)
      echo "Total time: $((${END_TIME} - ${START_TIME})) seconds"
    stage:
      - etc
      - lib
      - usr
