---

name: CI
on:
  push:
    branches:
      - main
      - v3.6.x
  pull_request:
    branches:
      - main
      - v3.6.x
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out sources
        uses: actions/checkout@v3
      - name: Set LXD snap channel
        run: sudo snap refresh --channel 5.0/stable lxd
      - name: Get snapcraft source
        run: |
          cd ..
          git config --global user.email 'nicolabock@gmail.com'
          git config --global user.name 'Nicolas Bock'
          # git clone --branch test https://github.com/nicolasbock/snapcraft.git
          git clone https://github.com/snapcore/snapcraft.git
          cd snapcraft
          git checkout 6.0.2
          git tag --annotate --message test v1.0.0
      - name: Build snapcraft
        uses: snapcore/action-build@v1
        with:
          path: ../snapcraft
        id: snapcraft
      - name: Install test version of snapcraft
        run: |
          sudo snap install --dangerous --classic ${{ steps.snapcraft.outputs.snap }}
      - name: Build snap
        run: |
          export SNAPCRAFT_BUILD_ENVIRONMENT=lxd
          time sg lxd -c 'snapcraft --use-lxd'
          echo "done building rabbitmq-server snap"
        id: rabbitmq_snap
      - name: Install rabbitmq-server snap
        run: |
          sudo snap install --devmode ${{ steps.rabbitmq_snap.outputs.snap }}
      - name: Wait for rabbitmq-server to start
        run: |
          set -e -u -x
          success=0
          for i in $(seq 10); do
            if sudo snap services rabbitmq-server-snap | grep --quiet enabled; then
              success=1
              break
            fi
            sleep 2
          done
          (( ${success} == 1 ))
          success=0
          for i in $(seq 10); do
            if sudo snap services rabbitmq-server-snap | grep --quiet active; then
              success=1
              break
            fi
            sleep 2
          done
          (( ${success} == 1 ))
      - name: Check server logs
        run: |
          set -e -u -x
          success=0
          for i in $(seq 10); do
            if sudo snap logs rabbitmq-server-snap.rabbitmq-server | grep --quiet "Starting broker"; then
              success=1
              break
            fi
            sleep 2
          done
          (( ${success} == 1 ))
      - name: Check whether process is running
        run: pgrep -alf bin/rabbitmq-server
      - name: Check cluster status
        run: |
          set -e -u -x
          success=0
          for i in $(seq 10); do
            if sudo rabbitmq-server-snap.rabbitmqctl cluster_status; then
              success=1
              break
            fi
            sleep 2
          done
          (( ${success} == 1 ))
      - name: Store snap artifact
        uses: actions/upload-artifact@v2
        with:
          name: snap
          path: ${{ steps.rabbitmq_snap.outputs.snap }}
